%macro printString 1 ;Es necesario que el string definido en .data termine en cero.
		mov rax, %1
		push rax
		mov rbx, 0
	%%printLoop:
		inc rax
		inc rbx
		mov cl, [rax]
		cmp cl, 0
		jne %%printLoop

		mov rax, 1
		mov rdi, 1
		pop rsi
		mov rdx, rbx
		syscall
%endmacro


%macro exit 0
	mov rax, 60
	mov rdi, 0
	syscall
%endmacro


;Imprimir números enteros

%macro printInt 1 ;Es necesario el DigitSpace, el DigitSpacePos y el número
	mov rcx, space
	;mov rbx, 10
	;mov [rcx], rbx
	inc rcx
	mov[spacePos], rcx

%%printIntLoop:
	mov rdx, 0
	mov rbx, 10
	mov rax, %1 ;linea agreada por mí
	div rbx   
	push rax
	add rdx, 48 ;rdx posee el residuo de la division
	mov rcx, [spacePos]
	mov [rcx], dl
	inc rcx
	mov [spacePos], rcx
	pop rax
	cmp rax, 0
	jne %%printIntLoop

%%printIntLoop2:
	mov rcx, [spacePos]
	mov rax, 1
	mov rdi, 1
	mov rsi, rcx
	mov rdx, 1
	syscall
	mov rcx, [spacePos]
	dec rcx
	mov [spacePos], rcx
	cmp rcx, space
	jge %%printIntLoop2

%endmacro
